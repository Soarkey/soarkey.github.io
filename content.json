[{"title":"灰色预测模型解题步骤","date":"2017-03-16T00:00:00.000Z","path":"2017/03/16/灰色预测模型解题步骤/","text":"灰色模型简介白色系统是指系统内部特征是完全已知的；黑色系统是指系统内部信息完全未知的；而灰色系统是介于白色系统和黑色系统之间的一种系统，灰色系统其内部一部分信息已知，另一部分信息未知或不确定。 灰色预测，是指对系统行为特征值的发展变化进行的预测，对既含有已知信息又含有不确定信息的系统进行的预测，也就是对在一定范围内变化的、与时间序列有关的灰过程进行预测。尽管灰过程中所显示的现象是随机的、杂乱无章的，但毕竟是有序的、有界的，因此得到的数据集合具备潜在的规律。灰色预测是利用这种规律建立灰色模型对灰色系统进行预测。 目前使用最广泛的灰色预测模型就是关于数列预测的一个变量、一阶微分的GM(1,1)模型。它是基于随机的原始时间序列，经按时间累加后所形成的新的时间序列呈现的规律可用一阶线性微分方程的解来逼近。经证明，经一阶线性微分方程的解逼近所揭示的原始时间序列呈指数变化规律。因此，当原始时间序列隐含着指数变化规律时，灰色模型GM(1,1)的预测是非常成功的。 适用情景灰色模型适用于适合数据较少的情况（超过三组就行）,一般是在其他预测方法用不了时采用的方法。 GM(1,1)模型设有原始序列$x^{(0)}=(x^{(0)}(1),x^{(0)}(2),…,x^{(0)}(n)$,n为数据个数。则根据$x^{(0)}$数据建立GM（1,1）模型来实现预测功能步骤如下: 1.一次累加生成序列原始数据一次累加以便弱化随机序列的波动性和随机性，得到新数据序列:$$ x^{(1)}=(x^{(1)}(1),x^{(1)}(2),…,x^{(1)}(n)) \\\\ =(x^{(0)}(1),x^{(0)}(1)+x^{(0)}(2),…,x^{(0)}(1)+x^{(0)}(2)+…+x^{(0)}(n))$$其中,$x^{(1)}(k)$中各数据表示对应前n项数据的累加。$$x^{(1)}(k)=\\sum_{i=1}^{k} x^{(0)}(i), k=1,2,…,n$$ 2.建立灰微分方程与白化微分方程建立灰微分方程：$$ x^{(0)}(k)+az^{(k)}=b, k=2,3,…,n$$对应的白化微分方程为：$$ \\frac{dx^{(1)}}{dt}+ax^{(t)}=b$$ 记$u=\\begin{bmatrix}a ， b \\end{bmatrix}^{T}$ 其中,a、b为待定系数,分别称为发展灰数和内生控制灰数（或称发展系数和灰色作用量）,a的有效区间是（-2,2）,只要求出参数a、b,就能求出$x^{(1)}(k)$,进而求出$x^{(1)}(k+1)$的未来预测值。 3.对累加生成数据做均值生成序列B与常数项向量Y$$ B=\\begin{bmatrix} -\\frac{1}{2}(x^{(1)}(1)+x^{(1)}(2)) &amp; 1 \\\\ -\\frac{1}{2}(x^{(1)}(2)+x^{(1)}(3)) &amp; 1 \\\\ … &amp; … \\\\ -\\frac{1}{2}(x^{(1)}(n-1)+x^{(1)}(n)) &amp; 1 \\\\ \\end{bmatrix}, Y=\\begin{bmatrix} x^{(0)}(2) ， x^{(0)}(3) ， … ， x^{(0)}(n) \\end{bmatrix}^{T}$$ 4.用最小二乘法求解灰参数u由最小二乘法,求使得关于u的函数$J(u)=(Y-Bu)^T(Y-Bu)$达到最小值的u的估计值为$$ \\hat{u}=\\begin{bmatrix} \\hat{a} , \\hat{b} \\end{bmatrix}^T =(B^{T}B)^{-1}B^{T}Y$$最小二乘法——维基百科 5.求解白化微分方程将灰参数$\\hat{u}$带入微分方程$\\frac{dx^{(1)}}{dt}+ax^{(t)}=b$中求解,得$$ \\hat{x}^{(1)}(k+1)=\\begin{pmatrix}x^{(0)}(1)-\\frac{\\hat{b}}{\\hat{a}}\\end{pmatrix}e^{-\\hat{a}k}+\\frac{\\hat{b}}{\\hat{a}},k=0,1,…,n-1,…$$即为GM(1,1)模型。 例题解析北方某城市1986-1992年道理交通噪声平均声级数据见下表 表5.1 城市交通噪声数据/dB(A) 序号 年份 $L_{eq}$ 1 1986 71.1 2 1987 72.4 3 1988 72.4 4 1989 72.1 5 1990 71.4 6 1991 72.0 7 1992 71.6 1.级比检验建立交通噪声平均声级数据时间序列如下:$x^{(1)}=(x^{(1)}(1),x^{(1)}(2),…,x^{(1)}(n))=(71.1,72.4,72.4,72.1,71.4,72.0,71.6)$(1).求级比$\\lambda(k)$,有$$\\lambda(k)=\\frac{x^{(0)}(k-1)}{x^{(0)}(k)},$$$$\\lambda=(\\lambda(2),\\lambda(3),…,\\lambda(7))=(0.982,1,1.0042,1.0098,0.9917,1.0056)$$(2).级比判断由于所有的$\\lambda(k)\\in[0.982,1.0098],k=2,…,7$,故可以用$x^{(0)}$作令人满意的GM(1,1)建模。 2.GM(1,1)建模(1).对原始数据$x^{(1)}$作一次累加，得$$x^{(1)}=(71.1,143.5,215.9,288,359.4,431.4,503)$$(2).构造数据矩阵B及数据向量Y,有$$ B=\\begin{bmatrix} -\\frac{1}{2}(x^{(1)}(1)+x^{(1)}(2)) &amp; 1 \\\\ -\\frac{1}{2}(x^{(1)}(2)+x^{(1)}(3)) &amp; 1 \\\\ … &amp; … \\\\ -\\frac{1}{2}(x^{(1)}(n-1)+x^{(1)}(7)) &amp; 1 \\\\ \\end{bmatrix}, Y=\\begin{bmatrix} x^{(0)}(2) \\\\ x^{(0)}(3) \\\\ … \\\\ x^{(0)}(7) \\end{bmatrix}$$(3)计算:$$\\hat{u}=\\begin{bmatrix}\\hat{a} \\ \\hat{b}\\end{bmatrix}=(B^{T}B)^{-1}B^{T}Y=\\begin{bmatrix}0.0023 \\ 72.6573\\end{bmatrix}$$,于是得到$\\hat{a}=0.0023,\\hat{b}=72.6573$。(4).建立模型:$$\\frac{dx^{(1)}}{dt}+\\hat{a}x^{(t)}=\\hat{b}$$求解，得$$\\hat{x}^{(1)}(k+1)=\\begin{pmatrix}x^{(0)}(1)-\\frac{\\hat{b}}{\\hat{a}}\\end{pmatrix}e^{-\\hat{a}k}+\\frac{\\hat{b}}{\\hat{a}}=-30929e^{-0.0023k}+31000 $$(5).求生成序列预测值$\\hat{x}^{(1)}(k+1)$及模型还原值$\\hat{x}^{(0)}(k+1)$，令$k=1,2,3,4,5,6$,由(4)中解得的函数可算得$\\hat{x}^{(1)}$,其中取$\\hat{x}^{(1)}(1)=\\hat{x}^{(0)}(1)=x^{(0)}(1)=71.1$,由$\\hat{x}^{(0)}(k+1)=\\hat{x}^{(1)}(k+1)-x^{(0)}(k)$,取$k=1,2,3,4,5,6$,得$$\\hat{x}^{(0)}=(\\hat{x}^{(0)}(1),\\hat{x}^{(0)}(2),…,\\hat{x}^{(0)}(7))=(71.1,72.4,72.2,72.1,71.9,71.7,71.6) $$ 3.模型检验模型的各种检验指标值的计算结果见下表: 表5.3.1 GM(1,1)模型检验表 序号 年份 原始值 预测值 残差 相对误差 级比误差 1 1986 71.1 71.1 0 0 2 1987 72.4 72.4057 -0.0057 0.01% 0.0203 3 1988 72.4 72.2362 0.1638 0.23% 0.0023 4 1989 72.1 72.0671 0.0329 0.05% -0.0018 5 1990 71.4 71.8984 -0.4984 0.7% -0.0074 6 1991 72.0 71.7301 0.2699 0.37% 0.0107 7 1992 71.6 71.5622 0.0378 0.05% -0.0032 经验证，该模型的精度较高，可进行预测和预报。 4.附MATLAB代码1234567891011121314151617181920212223% 灰色模型clear;close all;clc;% 输入数据x0=[71.1 72.4 72.4 72.1 71.4 72.0 71.6]'; % 注意为列向量n=length(x0);lamda=x0(1:n-1)./x0(2:n) % 计算级比range=minmax(lamda') % 计算级比的范围x1=cumsum(x0) % 累加运算B=[-0.5*(x1(1:n-1)+x1(2:n)),ones(n-1,1)];Y=x0(2:n);u=B\\Y; % 拟合参数u(1)=a,u(2)=bsyms x(t)x=dsolve(diff(x)+u(1)*x == u(2),x(0) == x0(1)); % 求微分方程的特解 符号解xt=vpa(x,6) % 以小数格式显示微分方程的解yuce1=subs(x,t,[0:n-1]); % 求已知数据的预测值yuce2=double(yuce1); % 符号数转为数值类型，否则无法做差分运算yuce=[x0(1),diff(yuce2)] % 差分运算,还原数据epsilon=x0'-yuce % 计算残差delta=abs(epsilon./x0') % 计算相对误差rho=1-(1-0.5*u(1))/(1+0.5*u(1))*lamda' % 计算级比偏差值，u(1)=a","tags":[{"name":"灰色预测","slug":"灰色预测","permalink":"https://soarkey.github.io/tags/灰色预测/"},{"name":"数学模型","slug":"数学模型","permalink":"https://soarkey.github.io/tags/数学模型/"}]},{"title":"mysql、java数据类型的对应关系","date":"2017-03-11T00:00:00.000Z","path":"2017/03/11/mysql与java的数据类型对应/","text":"mysql数据类型与java数据类型的对应关系： 类型名称 显示长度 数据库类型 JAVA类型 JDBC类型索引(int) VARCHAR L+N VARCHAR java.lang.String 12 CHAR N CHAR java.lang.String 1 BLOB L+N BLOB java.lang.byte[] -4 TEXT 65535 VARCHAR java.lang.String -1 INTEGER 4 INTEGER UNSIGNED java.lang.Long 4 TINYINT 3 TINYINT UNSIGNED java.lang.Integer -6 SMALLINT 5 SMALLINT UNSIGNED java.lang.Integer 5 MEDIUMINT 8 MEDIUMINT UNSIGNED java.lang.Integer 4 BIT 1 BIT java.lang.Boolean -7 BIGINT 20 BIGINT UNSIGNED java.math.BigInteger -5 FLOAT 4+8 FLOAT java.lang.Float 7 DOUBLE 22 DOUBLE java.lang.Double 8 DECIMAL 11 DECIMAL java.math.BigDecimal 3 BOOLEAN 1 同TINYINT ID 11 PK (INTEGER UNSIGNED) java.lang.Long 4 DATE 10 DATE java.sql.Date 91 TIME 8 TIME java.sql.Time 92 DATETIME 19 DATETIME java.sql.Timestamp 93 TIMESTAMP 19 TIMESTAMP java.sql.Timestamp 93 YEAR 4 YEAR java.sql.Date 91","tags":[{"name":"mysql","slug":"mysql","permalink":"https://soarkey.github.io/tags/mysql/"},{"name":"java","slug":"java","permalink":"https://soarkey.github.io/tags/java/"}]},{"title":"关于Cookie技术的介绍","date":"2017-03-05T00:00:00.000Z","path":"2017/03/05/关于cookie的介绍/","text":"cookie基本知识介绍 一、会话技术分类cookie技术：会话数据保存在浏览器客户端session技术：会话数据保存在服务器端 二、cookie使用步骤1.构造Cookie Cookie(java.lang.String name, java.lang.String value) 2.设置Cookie void setPath(java.lang.String uri) 设置有效访问途径 有效路径指的是cookie的有效路径保存位置，浏览器在有效路径下访问服务器时就会带着cookie信息，否则不带cookie信息。 void setMaxAge(int expiry) 设置Cookie有效时间,单位为秒 注意细节：正整数：保存时间长度（1*30*24*60*60) 负整数：实现会话cookie, cookie保存在浏览器内存，随着浏览器的关闭而清除 例如:cookie.setMaxAge(-1) 零：删除同名的cookie void setValue(java.lang.String newValue) 设置Cookie的值 注意细节 Cookie数据类型只能保存非中文字符串类型的。浏览器一般只允许存放300个Cookie，每个站点最多存放20个Cookie，每个Cookie的大小限制为4KB 3.发送Cookie到浏览器保存 void addCookie(Cookie cookie) 发送Cookie给浏览器 4.服务器接收Cookie Cookie[] request.getCookies 接收Cookie 三、Cookie的局限：1.Cookie只能存储字符串类型，不能保存对象 2.只能存储非中文数据 3.&nbsp;1个Cookie的容量不超过4KB 如果要保存非字符串数据，超过4kb内容，只能使用session技术！ 四、Cookie常见错误1.数据类型错误 An invalid character [32] was present in the Cookie value 错误代码:12345SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"\"yyyy-MM-dd HH:mm:ss\"\");String nowTime = simpleDateFormat.format(new java.util.Date());Cookie cookie = new Cookie(\"\"time\"\"nowTime);cookie.setMaxAge(3600);response.addCookie(cookie); 解决方案:123456SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;&quot;yyyy-MM-dd HH:mm:ss&quot;&quot;);这一行代码yyyy-MM-dd和HH:mm:ss中间有个空格就会出错。如果改成这样SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;&quot;yyyy-MM-ddHH:mm:ss&quot;&quot;);把yyyy-MM-dd和HH:mm:ss连着写就没有错了。这是因为cookie不能存放除英文以外的数据，具有很大的局限性","tags":[{"name":"Cookie","slug":"Cookie","permalink":"https://soarkey.github.io/tags/Cookie/"}]},{"title":"利用hexo搭建博客","date":"2017-02-27T00:00:00.000Z","path":"2017/02/27/利用hexo搭建博客/","text":"经过多天的学习与尝试，踩过不少坑，终于是把博客搭建成功了，下面我把我的博客搭建过程分享出来，希望能对你起到一定的帮助！ 准备阶段一、安装Node.js（必须）因为搭建博客所用的hexo框架是基于Node.js开发的，所以我们必须要先安装Node.js。 Node.js官网 安装方法也比较简单，按照默认选项一项一项进行即可。 二、安装Git（必须）Git的作用就是把本地仓库的内容提交到github网站上或者把github上的项目克隆到本地仓库中，对后续的hexo博客部署起着决定性的作用。 Git官网 由于众所周知的原因，国内访问Git比较困难，这里提供了一个国内网盘下载链接。 Git网盘下载地址 三、注册Github账号（必须）github一个通过Git进行版本控制的软件源代码托管服务。我们的hexo博客正是搭建与此基础上，所以需要开发者先申请注册github账号，并且创立一个名为yourname.github.io的仓库（yourname为你的github账户名称）。另外github上聚集了许多著名的技术界公司和顶尖开发者的开源项目，体现了技术前沿的发展趋势，是我们一个不可多得的资料库。Github官网 安装配置Hexo (针对windows)一、 安装hexo创建一个文件夹，命名为blog（根据自己喜好命名）,在Gitbash中执行以下git命令来安装hexo。1$ npm install -g hexo-cli 二、 建立文件安装完成hexo后，执行以下命令，hexo将会在指定文件夹下新建所需文件。123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 新建完成后，指定文件夹的目录如下12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 三、 生成静态页面执行以下命令，让hexo生成静态页面。1$ hexo generate 可简写为1$ hexo g 执行完后会在blog目录里生成public文件夹，里面存放着发布的博客内容。 四、 在本地预览执行以下命令，启动hexo服务，进行本地hexo博客效果预览与调试。1$ hexo server 可简写为1$ hexo s 完成后打开浏览器输入网址http://localhost:4000，如果正常显示hexo默认初始页面，说明之前的配置正确，hexo已经在本地部署成功。 常见hexo配置错误结语至此，hexo的基本配置步骤已经完成。那我们怎么挑选适合自己博客的主题、更改博客显示的信息以及书写博客呢？请参考下一篇文章《yilia主题的配置与使用》 参考资料：Hexo中文文档","tags":[{"name":"hexo","slug":"hexo","permalink":"https://soarkey.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://soarkey.github.io/tags/blog/"}]}]