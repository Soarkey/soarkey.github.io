<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Soarkey的博客</title>
  <subtitle>Stay hungry. Stay foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://soarkey.github.io/"/>
  <updated>2017-03-11T13:28:50.964Z</updated>
  <id>https://soarkey.github.io/</id>
  
  <author>
    <name>Soarkey</name>
    <email>985686485@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql、java数据类型的对应关系</title>
    <link href="https://soarkey.github.io/2017/03/11/mysql%E4%B8%8Ejava%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94/"/>
    <id>https://soarkey.github.io/2017/03/11/mysql与java的数据类型对应/</id>
    <published>2017-03-11T00:00:00.000Z</published>
    <updated>2017-03-11T13:28:50.964Z</updated>
    
    <content type="html"><![CDATA[<p>mysql数据类型与java数据类型的对应关系：<br><a id="more"></a></p>
<table><br><tr><br><th>类型名称</th><br><th>显示长度</th><br><th>数据库类型</th><br><th>JAVA类型</th><br><th>JDBC类型索引(int)</th><br></tr><br><tr><br><td>VARCHAR</td><br><td>L+N</td><br><td>VARCHAR</td><br><td>java.lang.String</td><br><td>12</td><br></tr><br><tr><br><td>CHAR</td><br><td>N</td><br><td>CHAR</td><br><td>java.lang.String</td><br><td>1</td><br></tr><br><tr><br><td>BLOB</td><br><td>L+N</td><br><td>BLOB</td><br><td>java.lang.byte[]</td><br><td>-4</td><br></tr><br><tr><br><td>TEXT</td><br><td>65535</td><br><td>VARCHAR</td><br><td>java.lang.String</td><br><td>-1</td><br></tr><br><td>INTEGER</td><br><td>4</td><br><td>INTEGER UNSIGNED</td><br><td>java.lang.Long</td><br><td>4</td><br><br><tr><br><td>TINYINT</td><br><td>3</td><br><td>TINYINT UNSIGNED</td><br><td>java.lang.Integer</td><br><td>-6</td><br></tr><br><tr><br><td>SMALLINT</td><br><td>5</td><br><td>SMALLINT UNSIGNED</td><br><td>java.lang.Integer</td><br><td>5</td><br></tr><br><tr><br><td>MEDIUMINT</td><br><td>8</td><br><td>MEDIUMINT UNSIGNED</td><br><td>java.lang.Integer</td><br><td>4</td><br></tr><br><tr><br><td>BIT</td><br><td>1</td><br><td>BIT</td><br><td>java.lang.Boolean</td><br><td>-7</td><br></tr><br><tr><br><td>BIGINT</td><br><td>20</td><br><td>BIGINT UNSIGNED</td><br><td>java.math.BigInteger</td><br><td>-5</td><br></tr><br><tr><br><td>FLOAT</td><br><td>4+8</td><br><td>FLOAT</td><br><td>java.lang.Float</td><br><td>7</td><br></tr><br><tr><br><td>DOUBLE</td><br><td>22</td><br><td>DOUBLE</td><br><td>java.lang.Double</td><br><td>8</td><br></tr><br><tr><br><td>DECIMAL</td><br><td>11</td><br><td>DECIMAL</td><br><td>java.math.BigDecimal</td><br><td>3</td><br></tr><br><tr><br><td>BOOLEAN</td><br><td>1</td><br><td>同TINYINT</td><br><td></td><br><td></td><br></tr><br><td>ID</td><br><td>11</td><br><td>PK (INTEGER UNSIGNED)</td><br><td>java.lang.Long</td><br><td>4</td><br><br><tr><br><td>DATE</td><br><td>10</td><br><td>DATE</td><br><td>java.sql.Date</td><br><td>91</td><br></tr><br><tr><br><td>TIME</td><br><td>8</td><br><td>TIME</td><br><td>java.sql.Time</td><br><td>92</td><br></tr><br><tr><br><td>DATETIME</td><br><td>19</td><br><td>DATETIME</td><br><td>java.sql.Timestamp</td><br><td>93</td><br></tr><br><tr><br><td>TIMESTAMP</td><br><td>19</td><br><td>TIMESTAMP</td><br><td>java.sql.Timestamp</td><br><td>93</td><br></tr><br><tr><br><td>YEAR</td><br><td>4</td><br><td>YEAR</td><br><td>java.sql.Date</td><br><td>91</td><br></tr></table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql数据类型与java数据类型的对应关系：&lt;br&gt;
    
    </summary>
    
      <category term="数据类型对应关系" scheme="https://soarkey.github.io/categories/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/"/>
    
    
      <category term="mysql" scheme="https://soarkey.github.io/tags/mysql/"/>
    
      <category term="java" scheme="https://soarkey.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>关于Cookie技术的介绍</title>
    <link href="https://soarkey.github.io/2017/03/05/%E5%85%B3%E4%BA%8Ecookie%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
    <id>https://soarkey.github.io/2017/03/05/关于cookie的介绍/</id>
    <published>2017-03-05T00:00:00.000Z</published>
    <updated>2017-03-11T13:25:33.999Z</updated>
    
    <content type="html"><![CDATA[<p>cookie基本知识介绍<br><a id="more"></a></p>
<h1 id="一、会话技术分类"><a href="#一、会话技术分类" class="headerlink" title="一、会话技术分类"></a>一、会话技术分类</h1><p>cookie技术：会话数据保存在浏览器客户端<br>session技术：会话数据保存在服务器端</p>
<h1 id="二、cookie使用步骤"><a href="#二、cookie使用步骤" class="headerlink" title="二、cookie使用步骤"></a>二、cookie使用步骤</h1><h2 id="1-构造Cookie"><a href="#1-构造Cookie" class="headerlink" title="1.构造Cookie"></a>1.构造Cookie</h2><ul>
<li>Cookie(java.lang.String name, java.lang.String value)</li>
</ul>
<h2 id="2-设置Cookie"><a href="#2-设置Cookie" class="headerlink" title="2.设置Cookie"></a>2.设置Cookie</h2><ul>
<li><p>void setPath(java.lang.String uri)       设置有效访问途径</p>
<blockquote>
<p>有效路径指的是cookie的有效路径保存位置，浏览器在有效路径下访问服务器时就会带着cookie信息，否则不带cookie信息。</p>
</blockquote>
</li>
<li><p>void setMaxAge(int expiry)               设置Cookie有效时间,单位为秒</p>
<blockquote>
<p><strong>注意细节：</strong><br><br>正整数：保存时间长度（1*30*24*60*60)</p>
<p>负整数：实现会话cookie, cookie保存在浏览器内存，随着浏览器的关闭而清除</p>
<ul>
<li>例如:cookie.setMaxAge(-1)</li>
</ul>
<p>零：删除同名的cookie</p>
</blockquote>
</li>
<li><p>void setValue(java.lang.String newValue)   设置Cookie的值  </p>
<blockquote>
<p><strong>注意细节</strong></p>
<p>Cookie数据类型只能保存非中文字符串类型的。浏览器一般只允许存放300个Cookie，每个站点最多存放20个Cookie，每个Cookie的大小限制为4KB</p>
</blockquote>
</li>
</ul>
<h2 id="3-发送Cookie到浏览器保存"><a href="#3-发送Cookie到浏览器保存" class="headerlink" title="3.发送Cookie到浏览器保存"></a>3.发送Cookie到浏览器保存</h2><ul>
<li>void addCookie(Cookie cookie)           发送Cookie给浏览器</li>
</ul>
<h2 id="4-服务器接收Cookie"><a href="#4-服务器接收Cookie" class="headerlink" title="4.服务器接收Cookie"></a>4.服务器接收Cookie</h2><ul>
<li>Cookie[] request.getCookies                接收Cookie</li>
</ul>
<h1 id="三、Cookie的局限："><a href="#三、Cookie的局限：" class="headerlink" title="三、Cookie的局限："></a>三、Cookie的局限：</h1><p>1.Cookie只能存储字符串类型，不能保存对象</p>
<p>2.只能存储非中文数据</p>
<p>3.&nbsp;1个Cookie的容量不超过4KB</p>
<blockquote>
<p>如果要保存非字符串数据，超过4kb内容，只能使用session技术！</p>
</blockquote>
<h1 id="四、Cookie常见错误"><a href="#四、Cookie常见错误" class="headerlink" title="四、Cookie常见错误"></a>四、Cookie常见错误</h1><h2 id="1-数据类型错误"><a href="#1-数据类型错误" class="headerlink" title="1.数据类型错误"></a>1.数据类型错误</h2><blockquote>
<p><code>An invalid character [32] was present in the Cookie value</code></p>
</blockquote>
<p>错误代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">""</span>yyyy-MM-dd HH:mm:ss<span class="string">""</span>);</div><div class="line">String nowTime = simpleDateFormat.format(<span class="keyword">new</span> java.util.Date());</div><div class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">""</span>time<span class="string">""</span>nowTime);</div><div class="line">cookie.setMaxAge(<span class="number">3600</span>);</div><div class="line">response.addCookie(cookie);</div></pre></td></tr></table></figure></p>
<p>解决方案:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;&quot;yyyy-MM-dd HH:mm:ss&quot;&quot;);</div><div class="line">这一行代码yyyy-MM-dd和HH:mm:ss中间有个空格就会出错。</div><div class="line">如果改成这样</div><div class="line">SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;&quot;yyyy-MM-ddHH:mm:ss&quot;&quot;);</div><div class="line">把yyyy-MM-dd和HH:mm:ss连着写就没有错了。</div><div class="line">这是因为cookie不能存放除英文以外的数据，具有很大的局限性</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cookie基本知识介绍&lt;br&gt;
    
    </summary>
    
      <category term="Java Web" scheme="https://soarkey.github.io/categories/Java-Web/"/>
    
    
      <category term="Cookie" scheme="https://soarkey.github.io/tags/Cookie/"/>
    
  </entry>
  
  <entry>
    <title>利用hexo搭建博客</title>
    <link href="https://soarkey.github.io/2017/02/27/%E5%88%A9%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://soarkey.github.io/2017/02/27/利用hexo搭建博客/</id>
    <published>2017-02-27T00:00:00.000Z</published>
    <updated>2017-03-04T06:19:17.308Z</updated>
    
    <content type="html"><![CDATA[<p>经过多天的学习与尝试，踩过不少坑，终于是把博客搭建成功了，下面我把我的博客搭建过程分享出来，希望能对你起到一定的帮助！</p>
<a id="more"></a>
<h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><h3 id="一、安装Node-js（必须）"><a href="#一、安装Node-js（必须）" class="headerlink" title="一、安装Node.js（必须）"></a>一、安装Node.js（必须）</h3><p>因为搭建博客所用的hexo框架是基于Node.js开发的，所以我们必须要先安装Node.js。<br> <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js官网</a></p>
<p>安装方法也比较简单，按照默认选项一项一项进行即可。</p>
<h3 id="二、安装Git（必须）"><a href="#二、安装Git（必须）" class="headerlink" title="二、安装Git（必须）"></a>二、安装Git（必须）</h3><p>Git的作用就是把本地仓库的内容提交到github网站上或者把github上的项目克隆到本地仓库中，对后续的hexo博客部署起着决定性的作用。<br> <a href="https://git-scm.com/" target="_blank" rel="external">Git官网</a></p>
<p>由于众所周知的原因，国内访问Git比较困难，这里提供了一个国内网盘下载链接。<br> <a href="https://npm.taobao.org/mirrors/git-for-windows/2.12.0.windows.1/Git-2.12.0-64-bit.exe" target="_blank" rel="external">Git网盘下载地址</a></p>
<h3 id="三、注册Github账号（必须）"><a href="#三、注册Github账号（必须）" class="headerlink" title="三、注册Github账号（必须）"></a>三、注册Github账号（必须）</h3><p>github一个通过Git进行版本控制的软件源代码托管服务。我们的hexo博客正是搭建与此基础上，所以需要开发者先申请注册github账号，并且创立一个名为yourname.github.io的仓库（yourname为你的github账户名称）。<br>另外github上聚集了许多著名的技术界公司和顶尖开发者的开源项目，体现了技术前沿的发展趋势，是我们一个不可多得的资料库。<br><a href="https://github.com" target="_blank" rel="external">Github官网</a></p>
<h2 id="安装配置Hexo-针对windows"><a href="#安装配置Hexo-针对windows" class="headerlink" title="安装配置Hexo (针对windows)"></a>安装配置Hexo (针对windows)</h2><h4 id="一、-安装hexo"><a href="#一、-安装hexo" class="headerlink" title="一、 安装hexo"></a>一、 安装hexo</h4><p>创建一个文件夹，命名为blog（根据自己喜好命名）,在Gitbash中执行以下git命令来安装hexo。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h4 id="二、-建立文件"><a href="#二、-建立文件" class="headerlink" title="二、 建立文件"></a>二、 建立文件</h4><p>安装完成hexo后，执行以下命令，hexo将会在指定文件夹下新建所需文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;folder&gt;</div><div class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>新建完成后，指定文件夹的目录如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── <span class="built_in">source</span></div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes</div></pre></td></tr></table></figure></p>
<h4 id="三、-生成静态页面"><a href="#三、-生成静态页面" class="headerlink" title="三、 生成静态页面"></a>三、 生成静态页面</h4><p>执行以下命令，让hexo生成静态页面。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p>
<p>可简写为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure></p>
<p>执行完后会在blog目录里生成public文件夹，里面存放着发布的博客内容。</p>
<h4 id="四、-在本地预览"><a href="#四、-在本地预览" class="headerlink" title="四、 在本地预览"></a>四、 在本地预览</h4><p>执行以下命令，启动hexo服务，进行本地hexo博客效果预览与调试。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>可简写为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>完成后打开浏览器输入网址<a href="http://localhost:4000，" target="_blank" rel="external">http://localhost:4000，</a><br>如果正常显示hexo默认初始页面，说明之前的配置正确，<br>hexo已经在本地部署成功。</p>
<h2 id="常见hexo配置错误"><a href="#常见hexo配置错误" class="headerlink" title="常见hexo配置错误"></a>常见hexo配置错误</h2><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，hexo的基本配置步骤已经完成。<br>那我们怎么挑选适合自己博客的主题、更改博客显示的信息以及书写博客呢？<br>请参考下一篇文章《yilia主题的配置与使用》</p>
<p>参考资料：<a href="https://hexo.io/zh-cn/docs" target="_blank" rel="external">Hexo中文文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过多天的学习与尝试，踩过不少坑，终于是把博客搭建成功了，下面我把我的博客搭建过程分享出来，希望能对你起到一定的帮助！&lt;/p&gt;
    
    </summary>
    
      <category term="hexo教程" scheme="https://soarkey.github.io/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
      <category term="博客搭建" scheme="https://soarkey.github.io/categories/hexo%E6%95%99%E7%A8%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="https://soarkey.github.io/tags/hexo/"/>
    
      <category term="blog" scheme="https://soarkey.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://soarkey.github.io/2017/02/26/hello-world/"/>
    <id>https://soarkey.github.io/2017/02/26/hello-world/</id>
    <published>2017-02-25T20:46:25.000Z</published>
    <updated>2017-03-05T03:06:29.887Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>$$\frac{ \partial u} {\partial t} = h^2 \left( \frac{ \partial^2 u}{ \partial x^2} + \frac{ \partial^2 u}{ \partial y^2} + \frac{ \partial^2 u}{ \partial z^2} \right)$$</p>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<p>code</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import java.util.Scanner;</div><div class="line">System.out.println(<span class="string">"hello world!"</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="导言" scheme="https://soarkey.github.io/categories/%E5%AF%BC%E8%A8%80/"/>
    
    
      <category term="hello" scheme="https://soarkey.github.io/tags/hello/"/>
    
      <category term="world" scheme="https://soarkey.github.io/tags/world/"/>
    
  </entry>
  
</feed>
